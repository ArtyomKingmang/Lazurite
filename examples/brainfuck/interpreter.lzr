#jInclude "java.lang.String"

func charAt(arg, index) {
     input = new String(arg)
     out = String.valueOf(input.charAt(index))
     return out
}

func interpret(code) {
    memory = Array(30000)
    pointer = 0
    instructionPointer = 0
    len = length(code)

    while(instructionPointer < len) {
        instruction = charAt(code, instructionPointer)

        match(instruction) {
            case ">" : pointer++
            case "<" : pointer--
            case "+" : memory[pointer]++
            case "-" : memory[pointer]--
            case "[" : {
                if (memory[pointer] == 0) {
                    loopCounter = 1
                    while(loopCounter != 0) {
                        instructionPointer++
                        if (charAt(code, instructionPointer) == "[") {
                            loopCounter++
                        } else if (charAt(code, instructionPointer) == "]") {
                            loopCounter--
                        }
                    }
                }
            }
            case "]" : {
                if (memory[pointer] != 0) {
                    loopCounter = 1
                    while(loopCounter != 0) {
                       instructionPointer--
                       if (charAt(code, instructionPointer) == "[") {
                           loopCounter--
                       } else if (charAt(code, instructionPointer) == "]") {
                           loopCounter++
                       }
                    }
                }
            }
            case "." : {
                print(char(memory[pointer]))
            }
        }
        instructionPointer++
    }

}

code = "++++++++++[>+++++++>++++++++++>+++<<<-]>++.>+.+++++++..+++.>++.<<+++++++++++++++.>.+++.------.--------.>+."
interpret(code)